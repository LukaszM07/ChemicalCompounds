package chemicalcompounds.view;

import chemicalcompounds.configuration.AppConfig;
import chemicalcompounds.domain.Chemicals;
import chemicalcompounds.service.ChemicalsService;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import javax.swing.table.DefaultTableModel;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.List;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {

        context = new AnnotationConfigApplicationContext(AppConfig.class);
        chemicalsService = context.getBean("chemicalsServiceImpl", ChemicalsService.class);
        initComponents();
        fill();
        fillCBRegType();
        fillCBSubType();
        fillCBTotalTonnageBand();
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lR = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lL = new javax.swing.JLabel();
        bPrev = new javax.swing.JButton();
        bNext = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbWith = new javax.swing.JComboBox();
        bExit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfEC = new javax.swing.JFormattedTextField();
        tfCasNum = new javax.swing.JTextField();
        cbRegType = new javax.swing.JComboBox();
        cbTotalTonnageBand = new javax.swing.JComboBox();
        cbSubType = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new DefaultTableModel(new Object[][]{

        },
                columnNames));
        jScrollPane1.setViewportView(jTable1);

        lR.setText("0");

        jLabel2.setText("z");

        lL.setText("0");

        bPrev.setText("<");
        bPrev.addActionListener(this::bPrevActionPerformed);

        bNext.setText(">");
        bNext.addActionListener(this::bNextActionPerformed);

        jLabel4.setText("Ilość rekordów na stronie: ");

        cbWith.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25", "50", "75", "100", "150", "200" }));
        cbWith.setSelectedIndex(1);
        cbWith.addItemListener(this::cbWithItemStateChanged);

        bExit.setText("Wyjście");
        bExit.addActionListener(this::bExitActionPerformed);

        jLabel5.setText("Name:");

        jLabel6.setText("EC / List Number:");

        jLabel7.setText("Cas Number:");

        jLabel8.setText("Registration Type:");

        jLabel9.setText("Submission Type:");

        jLabel10.setText("Total tonnage Band:");

        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNameKeyPressed(evt);
            }
        });


        javax.swing.text.MaskFormatter mask = null;
        try {
            mask = new javax.swing.text.MaskFormatter("###-###-#");
            mask.setPlaceholderCharacter('_');
        } catch (ParseException e) {
            e.printStackTrace();
        }

        tfEC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mask));
        tfEC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfECKeyPressed(evt);
            }
        });

        tfCasNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCasNumKeyTyped(evt);
            }
        });

        cbRegType.addItemListener(this::cbRegTypeItemStateChanged);

        cbSubType.addItemListener(this::cbSubTypeItemStateChanged);

        cbTotalTonnageBand.addItemListener(this::cbTotalTonnageBandItemStateChanged);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfName)
                                        .addComponent(tfEC)
                                        .addComponent(tfCasNum)
                                        .addComponent(cbRegType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbTotalTonnageBand, javax.swing.GroupLayout.Alignment.TRAILING, 0, 137, Short.MAX_VALUE)
                                        .addComponent(cbSubType, 0, 137, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 817, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbWith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(bPrev)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lR)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bNext)
                                                .addGap(256, 256, 256)
                                                .addComponent(bExit)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel5)
                                                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel6)
                                                        .addComponent(tfEC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(24, 24, 24)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel7)
                                                        .addComponent(tfCasNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel8)
                                                        .addComponent(cbRegType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(25, 25, 25)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel9)
                                                                        .addComponent(cbSubType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(35, 35, 35)
                                                                .addComponent(jLabel10))
                                                        .addComponent(cbTotalTonnageBand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lR)
                                        .addComponent(jLabel2)
                                        .addComponent(lL)
                                        .addComponent(bPrev)
                                        .addComponent(bNext)
                                        .addComponent(jLabel4)
                                        .addComponent(cbWith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bExit))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    // Variables declaration - do not modify
    private javax.swing.JButton bNext;
    private javax.swing.JButton bPrev;
    private javax.swing.JComboBox cbRegType;
    private javax.swing.JComboBox cbSubType;
    private javax.swing.JComboBox cbTotalTonnageBand;
    private javax.swing.JComboBox cbWith;
    private javax.swing.JButton bExit;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lL;
    private javax.swing.JLabel lR;
    private javax.swing.JTextField tfCasNum;
    private javax.swing.JFormattedTextField tfEC;
    private javax.swing.JTextField tfName;
    // End of variables declaration

    // Action perform methods
    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    private void bNextActionPerformed(java.awt.event.ActionEvent evt) {
        if (nextPageWithRecords()) {
            fillTable(chemicalsService.getChemicalsRangeId(maxId + 1, Integer.valueOf(cbWith.getSelectedItem().toString())));
            maxId += Integer.valueOf(cbWith.getSelectedItem().toString());
        }

    }

    private void bPrevActionPerformed(java.awt.event.ActionEvent evt) {
        if (previousPageWithRecords()) {
            int cbW = Integer.valueOf(cbWith.getSelectedItem().toString());
            maxId -= (2 * cbW);
            fillTable(chemicalsService.getChemicalsRangeId(maxId + 1, cbW));
            maxId += cbW;
        }
    }

    private void cbWithItemStateChanged(java.awt.event.ItemEvent evt) {
        fillTable(chemicalsService.getChemicalsRangeId(1, Integer.valueOf(cbWith.getSelectedItem().toString())));
        setLabelsLeftAndRight();
    }

    private void tfNameKeyPressed(java.awt.event.KeyEvent evt) {
        if (tfName.getText().length() > 2) {
            fillTable(chemicalsService.getChemicalByName(tfName.getText()));
        } else {
            fill();
        }
    }

    private void tfECKeyPressed(java.awt.event.KeyEvent evt) {
        if (!tfEC.getText().contains("_")) {
            fillTable(chemicalsService.getChemicalsByEC(tfEC.getText()));
        } else {
            fill();
        }
    }

    private void tfCasNumKeyTyped(KeyEvent evt) {
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            fillTable(chemicalsService.getChemicalsByCasNumber(tfCasNum.getText()));
        } else {
            if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE) {
                fill();
            } else {
                if (!(Character.isDigit(evt.getKeyChar()) || evt.getKeyChar() == KeyEvent.VK_DELETE || evt.getKeyChar() == KeyEvent.VK_MINUS)) {
                    getToolkit().beep();
                    evt.consume();
                }
            }
        }
    }

    private void cbTotalTonnageBandItemStateChanged(ItemEvent itemEvent) {
        fillTable(chemicalsService.getChemicalsByTotalTonnageBand(cbTotalTonnageBand.getSelectedItem().toString()));
    }

    private void cbSubTypeItemStateChanged(ItemEvent itemEvent) {
        fillTable(chemicalsService.getChemicalsBySubmissionType(cbSubType.getSelectedItem().toString()));
    }

    private void cbRegTypeItemStateChanged(ItemEvent itemEvent) {
        fillTable(chemicalsService.getChemicalsByRegistrationType(cbRegType.getSelectedItem().toString()));
    }

    // End of action perform method


    // My methods declaration
    private void fillCBRegType() {
        cbRegType.setModel(new javax.swing.DefaultComboBoxModel<>(chemicalsService.getRegistrationType().toArray()));
    }

    private void fillCBTotalTonnageBand() {
        cbTotalTonnageBand.setModel(new javax.swing.DefaultComboBoxModel<>(chemicalsService.getTotalTonnageBand().toArray()));
    }

    private void fillCBSubType() {
        cbSubType.setModel(new javax.swing.DefaultComboBoxModel<>(chemicalsService.getSubmissionType().toArray()));
    }

    private void setLabelsLeftAndRight() {
        labelLeft = "1";
        lL.setText(labelLeft);
        labelRight = String.valueOf((int) (chemicalsService.count() / Double.valueOf(cbWith.getSelectedItem().toString()) + 0.999));
        lR.setText(labelRight);
    }

    private boolean nextPageWithRecords() {
        int left = Integer.valueOf(labelLeft);
        int right = Integer.valueOf(labelRight);

        if (left < right) {
            labelLeft = String.valueOf(++left);
            lL.setText(labelLeft);
            return true;
        }

        return false;
    }

    private boolean previousPageWithRecords() {
        int left = Integer.valueOf(labelLeft);

        if (left > 1) {
            labelLeft = String.valueOf(--left);
            lL.setText(labelLeft);
            return true;
        }

        return false;
    }

    private DefaultTableModel tmpTableModel() {
        return new DefaultTableModel(new Object[][]{

        },
                columnNames);
    }

    private void fillTable(List<Chemicals> listOfChemicals) {
        DefaultTableModel tmpTableModel = tmpTableModel();

        jTable1.setModel(tmpTableModel);

        for (Chemicals chemicals :
                listOfChemicals) {
            tmpTableModel.addRow(new Object[]{chemicals.getId(), chemicals.getName(), chemicals.getEc(), chemicals.getCasNumber(), chemicals.getRegistrationType(), chemicals.getSubmissionType(), chemicals.getTotalTonnageBand()});
        }

    }

    private void fill() {
        fillTable(chemicalsService.getChemicalsRangeId(1, 50));
        setLabelsLeftAndRight();
    }

    // End of my methods declaration

    // My variables declaration
    private String[] columnNames = {
            "id", "Name", "EC / List Number", "Cas Number", "Registration Type", "Submission Type", "Total tonnage Band"
    };
    private ApplicationContext context;
    private ChemicalsService chemicalsService;
    private String labelLeft;
    private String labelRight;
    private int maxId = 50;

    // End of variables declaration
}
